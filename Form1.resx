<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnNext.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAsAAAADICAYAAADm41erAAAABGdBTUEAALGPC/xhBQAACcVJREFUeF7t
        3c+O3EoZxuEWCCSUPQdlj3IBiEjsztmNuAA2yYWwymWggSsgC65xkNMJ/bW/sl3lYdxV1rN4RtPvOH+W
        pZF/9uVyubzs8vs/v1z++h8AADjedBadn0/rpWHbr37zcvn5H/k/AgAAR5jOotOZdH5OrZOGbX/8W/5P
        AADAkaYz6fycWicN637308vl6d/5PwAAAEeazqTT2XR+Xt2WhnV/+vv9P/zLP18uv/5tvg4AAP6fpjPn
        L/+6P4tOZ9P5ddvSsKwUvv3hL/k6AAB4C9PZc34ebQ/i0lBWCt8+fsnXAQDAW5rOoPFM2h7EpaFsHr49
        fX25vHufrwMAgLc0nUGns2g8m7YFcWnISuHbh8/5OgAAOMJ0Fr375WxTEJeGTPgGAEBPXhfEpeGe8A0A
        gB7tD+LScCN8AwCgZ/uCuDTcCN8AAOjZviAuDVfCNwAARtAexKXhSvgGAMAI2oO4NAjfAAAYS1sQNxuE
        bwAAjKg+iJsNwjcAAEZUH8SFD8I3AABGVhfEhQ/CNwAARlYXxH3/RvgGAMAZbAdxwjcAAE5mPYgTvgEA
        cDKrQZzwDQCAM1oM4oRvAACc0WIQlw7Azw7AAACM79sB+LlwAC7eAvEp/wUAADCSxVsgph+K4AAAOJPV
        CG764jFoAACcyeZj0CZehAEAwBlUvQjjhxTEeSIEAAADWXzyw9114YMgDgCAkS2Hb9HsDwniAAAY0Xr4
        Fs0GQRwAACNaD9+iNAjiAAAYy3b4FqXhShAHAMAI6sK3KA1XgjgAAEZQF75FabgRxAEA0LP68C1Kw40g
        DgCAntWHb1Ea7gniAADoUVv4FqUhE8QBANCT9vAtSkMmiAMAoCft4VuUhjJBHAAAPdgXvkVpKBPEAQDQ
        g33hW5SGZYI4AAAeaX/4FqVhnSAOAIBHeF34FqVhXSmIAwCAo7WFb1Eats2DOAAAOFpb+BalYVspiAMA
        gKO0h29RGuqUgjgAADhCe/gWpaGOAzAAAI9y+AHYLRAAADzS4bdAiOAAAHi0wyI4j0EDAKAHhz0GzYsw
        AAB4hIe8CKMUvnkVMgAARzn0Vcil8O3jl3wdAAC8pekMGs+k7UFcGsrm4dvT15fLu/f5OgAAeEvTGXQ6
        i8azaVsQl4asFL59+JyvAwCAI0xn0btfzjYFcWnIhG8AAPTkdUFcGu4J3wAA6NH+IC4NN8I3AAB6ti+I
        S8ON8A0AgJ7tC+LScCV8AwBgBO1BXBquhG8AAIygPYhLg/ANAICxtAVxs0H4BgDAiOqDuNkgfAMAYET1
        QVz4IHwDAGBkdUFc+CB8AwBgZHVB3PdvhG8AAJzBdhAnfAMA4GTWgzjhGwAAJ7MaxAnfAAA4o8UgTvgG
        AMAZLQZx6QD87AAMAMD4vh2AnwsH4OItEJ/yXwAAACNZvAVi+qEIDgCAM1mN4KYvHoMGAMCZbD4GbeJF
        GAAAnEHVizB+SEGcJ0IAADCQxSc/3F0XPgjiAAAY2XL4Fs3+kCAOAIARrYdv0WwQxAEAMKL18C1KgyAO
        AICxbIdvURquBHEAAIygLnyL0nAliAMAYAR14VuUhhtBHAAAPasP36I03AjiAADoWX34FqXhniAOAIAe
        tYVvURoyQRwAAD1pD9+iNGSCOAAAetIevkVpKBPEAQDQg33hW5SGMkEcAAA92Be+RWlYJogDAOCR9odv
        URrWCeIAAHiE14VvURrWlYI4AAA4Wlv4FqVh2zyIAwCAo7WFb1EatpWCOAAAOEp7+BaloU4piAMAgCO0
        h29RGuo4AAMA8CiHH4DdAgEAwCMdfguECA4AgEc7LILzGDQAAHpw2GPQvAgDAIBHeMiLMErhm1chAwBw
        lENfhVwK3z5+ydcBAMBbms6g8UzaHsSloWwevj19fbm8e5+vAwCAtzSdQaezaDybtgVxachK4duHz/k6
        AAA4wnQWvfvlbFMQl4ZM+AYAQE9eF8Sl4Z7wDQCAHu0P4tJwI3wDAKBn+4K4NNwI3wAA6Nm+IC4NV8I3
        AABG0B7EpeFK+AYAwAjag7g0CN8AABhLWxA3G4RvAACMqD6Imw3CNwAARlQfxIUPwjcAAEZWF8SFD8I3
        AABGVhfEff9G+AYAwBlsB3HCNwAATmY9iBO+AQBwMqtBnPANAIAzWgzihG8AAJzRYhCXDsDPDsAAAIzv
        2wH4uXAALt4C8Sn/BQAAMJLFWyCmH4rgAAA4k9UIbvriMWgAAJzJ5mPQJl6EAQDAGVS9COOHFMR5IgQA
        AANZfPLD3XXhgyAOAICRLYdv0ewPCeIAABjRevgWzQZBHAAAI1oP36I0COIAABjLdvgWpeFKEAcAwAjq
        wrcoDVeCOAAARlAXvkVpuBHEAQDQs/rwLUrDjSAOAICe1YdvURruCeIAAOhRW/gWpSETxAEA0JP28C1K
        QyaIAwCgJ+3hW5SGMkEcAAA92Be+RWkoE8QBANCDfeFblIZlgjgAAB5pf/gWpWGdIA4AgEd4XfgWpWFd
        KYgDAICjtYVvURq2zYM4AAA4Wlv4FqVhWymIAwCAo7SHb1Ea6pSCOAAAOEJ7+BaloY4DMAAAj3L4Adgt
        EAAAPNLht0CI4AAAeLTDIjiPQQMAoAeHPQbNizAAAHiEh7wIoxS+eRUyAABHOfRVyKXw7eOXfB0AALyl
        6Qwaz6TtQVwayubh29PXl8u79/k6AAB4S9MZdDqLxrNpWxCXhqwUvn34nK8DAIAjTGfRu1/ONgVxaciE
        bwAA9OR1QVwa7gnfAADo0f4gLg03wjcAAHq2L4hLw43wDQCAnu0L4tJwJXwDAGAE7UFcGq6EbwAAjKA9
        iEuD8A0AgLG0BXGzQfgGAMCI6oO42SB8AwBgRPVBXPggfAMAYGR1QVz4IHwDAGBkdUHc92+EbwAAnMF2
        ECd8AwDgZNaDOOEbAAAnsxrECd8AADijxSBO+AYAwBktBnHpAPzsAAwAwPi+HYCfCwfg4i0Qn/JfAAAA
        I1m8BWL6oQgOAIAzWY3gpi8egwYAwJlsPgZt4kUYAACcQdWLMH5IQZwnQgAAMJDFJz/cXRc+COIAABjZ
        cvgWzf6QIA4AgBGth2/RbBDEAQAwovXwLUqDIA4AgLFsh29RGq4EcQAAjKAufIvScCWIAwBgBHXhW5SG
        G0EcAAA9qw/fojTcCOIAAOhZffgWpeGeIA4AgB61hW9RGjJBHAAAPWkP36I0ZII4AAB60h6+RWkoE8QB
        ANCDfeFblIYyQRwAAD3YF75FaVgmiAMA4JH2h29RGtYJ4gAAeITXhW9RGtaVgjgAADhaW/gWpWHbPIgD
        AICjtYVvURq2lYI4AAA4Snv4FqWhTimIAwCAI7SHb//zX3MrbgLzoEsMAAAAAElFTkSuQmCC
</value>
  </data>
</root>